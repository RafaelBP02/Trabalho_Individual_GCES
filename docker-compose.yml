version: '3.8'
services:
  db:
    container_name: app_postgres
    image: postgres:latest
    restart: always
    volumes:
      - .:/library_db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - net_livraria

  meu_backend:
    container_name: app_backend
    restart: always
    build: ./library_back
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/library_backend
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      - db
    networks:
      - net_livraria

  node:
    container_name: app_frontend
    restart: always
    build: ./library_front
    command: npm start 
    volumes:
      - .:/library_frontend
    ports:
      - "3000:3000"
    depends_on:
      - meu_backend
    networks:
      - net_livraria

  nginx:
    container_name: app_nginx
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./library_front/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - node
    networks:
      - net_livraria

networks:
  net_livraria:
    driver: bridge